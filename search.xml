<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[自学编程之路]]></title>
    <url>%2F2018%2F11%2F21%2F%E8%87%AA%E5%AD%A6%E7%BC%96%E7%A8%8B%E4%B9%8B%E8%B7%AF%2F</url>
    <content type="text"><![CDATA[前言 生于忧患，死于安乐 有个上大学的的文科小妹妹想学编程问我有什么好的建议，我问她为什么想学编程？她说：“想法很简单，就是不能太落伍，而且听说编程能改变人的思考方式。”大多数同龄人都在享乐玩耍，而她居然有忧患意识想要充电，牛逼，佩服。本人在这之前自学了大半年的编程，今天就把自学过程中遇到问题和经验分享出来，希望可以帮其他人可以少走点弯路。 做好心里准备自学编程的弯路多得数不完，坑多得踩不完。如果你决定要自学编程，就意味着踏上了一条面对困难、挫折和失败的无尽之路，要想清楚自己能不能承受这些挫折，自己能不能坚持走到最后。 自学编程过程中总会遇到这样一些问题： 编程环境？不会搭建 知识点好多，定义概念，格式规则，缺点优点。。。 刚学的知识怎么又忘了，怎么这也不会那也不会 这个语法是什么逻辑，搞不懂 教程这样做可以，我这样做怎么就不行？ 敲了半天代码，一运行怎么全是错误？ 错误解决不了，想放弃，狗带 学了这么久，感觉还没入门 教程内容都是旧的，学起来费力 技术更新了，旧知识不管用，又要重新学 如果没有一颗能战胜这些苦恼的勇敢的心，我劝你还是尽早放弃，免得心灰意冷，身负重伤。而如果你喜欢挑战艰难险阻，能直面失败，并能在失败与痛苦中砥砺前行，那么恭喜你可以踏上编程之路，努力的去追寻自己的梦想吧。 选定方向 有了方向，努力才会有意义 编程的世界是多元纷繁的，大的方向就分前端开发、后端开发、移动开发、云计算、数据处理、智能硬件、物联网、虚拟现实等等，光编程语言都几十种。如果没有做过功课，贸然进入只会分分钟懵逼。所以最好是根据自己的兴趣爱好再结合市场前景，先选定一个方向，再选择一门语言，然后头也不回的深深扎进去。 我当初开始自学编程的时候，因为工作时学了点Linux,就准备学Linux。Linux没学几天，发现游戏编程的Unity 3D挺好玩的，就转学Unity 3D。Unity 3D学了段时间又觉得大数据很火，感觉接下来是大数据的时代，要跟上时代的脚步，然后又去学习Python。后面才意识到自己在移动应用上面有极大的兴趣并有一些自己的想法，再加上本人很喜欢Google,遂最终决定好好学习Android移动开发。 如果自己对自己兴趣爱好没有深刻的认识，没有明确的学习目标，只是一味茫然的去尝试，最终只会像猴子掰玉米一样，不但浪费了自己宝贵的时间，还会一无所获。 制定学习目标计划选定了方向之后，剩下的就是朝着目的努力前进了。自学的过程是枯燥乏味的，也没有人陪伴督促，所以要想自学有一定成果，除了要有清晰明确的目标计划，还要有很强的自我约束能力，还要善于自我及激励。不然很容易自由涣散，三天打鱼两天晒网，看起来花了不少时间，实际上没学到什么。 我开始的时候就是凭兴趣漫无目的的学习，结果发现收效甚微，于是才制定学习计划，开始系统的学习。我先是学习了JAVA基础语法，然后将整个Android开发涉及到的所有知识面简单快速的学习一遍，这样对整个体系框架有一个全面大概的认识，然后在详细具体的学习每一部分，尽量搞明白其中的实现逻辑和原理，以达到掌握知识的目的。最后开发练习的时候再根据自己要实现什么功能，去查相关的资料。 优化学习方式一、做好笔记，记录经验我们大多数人并没有过目不忘的神技，很多时候我们学了也不一定马上掌握，需要过后花时间慢慢领悟，而且还有忘掉的风险，所以对于重要的知识点都要做好笔记。 编程的过程中总会遇到各种各样的问题，比如编程环境的配置，常用的快捷键，编程过程中的错误、异常，软件更新问题等等。这些问题往往会不只一次出现，所以我们面对这些问题都是如何解决的，一定要记录下来，一是增加自己解决问题的经验，而是以防下次出现。 我做笔记记录的方式： 截图 拍照 思维导图 写Word文档 除了最初用纸质笔记本做过笔记，后面都是用上面的方式。用电子的方式方便快捷易于分享，而且我还能传到手机上，利用其它时间随时随地阅读。 二、认认真真敲代码二、认认真真敲代码二、认认真真敲代码编程没有捷径，只有勤奋努力。 三、多看官方文档，外文资料互联网是一个更新迭代很快的行业，所有编程语言都会不断的更新新功能和修复旧Bug，网上查的资料很有可能是旧的解决方案，现在已经不适用了。所以最好最快的方法就是查看官方文档。 毕竟互联网技术还是国外发展起来的，所以在很多技术问题方面，人家还是有优势的。有些问题在国内不一定能找到答案就去外网找。 四、进入行业圈子只有进入行业圈子与其他人交流，你才了解最新的行业动态，才知道自己需要更新哪些技能。最重要的是有了这群人，自己遇到问题解决起来嗖嗖的，那速度才叫“倍爽儿”。进入行业圈子的方式： 混迹各行业网站论坛个人技术博客一般在搜问题时很容易就搜到这些网站 关注各种行业话题和人比如知乎、微博、微信公众号等 QQ群、微信群交流基地，技术后援团 Github互联网圣地，行业大圈子就在这。 五、动手做项目我们学习编程的最终目的就是用所学的做出具有一定功能的项目，而做项目又是最好的学习和巩固知识的方式。如果前期能力不足就先做一些简单的功能模块，一步一步慢慢来，不要一开始就要实现各种酷炫炸天功能，遇到不会的就在网上查， 现在互联网这么发达，获取资源也及其方便。而且开发前也最好在网上查一下有没有已经成型的框架或模板，编程界有一句很流行的话“不要重复造轮子”，什么都自己做一是很耗费时间，二是自己技术能力不足还可能留下不少坑。 收获回报自学编程说起来到处都是苦，但也并不是完全一无是处。客观地看，自学编程还是有很多好处的。 培养自学能力 掌握一门技术 锻炼毅力和独处能力 提高解决问题能力 提高面对挫折失败的承受能力 改变思维方式 享受沉浸专注的快乐 享受创造的快乐 资源分享 自学视频网站： 慕课网 本人主要学习网站，课程全部免费而且视频比较新，有课程计划和在线编程。极客学院 课程全多，部分课程需要VIP，有的课程比较旧。麦子学院 大多要报线上培训班，不过好像有免费入口，反正我看的Android全部免费。51CTO学院 没用过网易云课堂 只用过网易公开课，没用过云课堂。咪咕学院 没用过MOOC学院 果壳慕课网，比较杂，没用过。 手机应用 SegmentFault 专业互联网问答，有PC版。开发者头条 程序员学习分享平台。掘金 高质量技术分享平台码云 OSChina旗下云端开发者服务平台涂书笔记 有道云笔记、印象笔记这些大家都知道了，图书笔记的特点是可以上传照片并识别照片中文字。主要针对读书人群。Mindjet Maps 思维导图，大名鼎鼎MindManager的Android版，免费极品思维导图 Android版，功能齐全奇妙清单 待办事项清单种子习惯 习惯养成应用 翻墙软件shadowsocks 浏览器Chrome浏览器 各种开发工具，各种插件，开发者大多都用Chrome浏览器（去广告，翻译轻轻松松） 写在最后这是我在简书上的第一篇文章，不足的地方请大家批评指正，大家共同学习进步，加油！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>自学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018观看影视]]></title>
    <url>%2F2018%2F11%2F21%2F2018%E8%A7%82%E7%9C%8B%E5%BD%B1%E8%A7%86%2F</url>
    <content type="text"><![CDATA[电影 2018.11 《侏罗纪世界2》 2018.10 《超人总动员2》 《升级》 《精灵旅社3》 《蚁人2：黄蜂女现身》 2018.08 《死侍2》 《复仇者联盟3》 《头号玩家》 2018.07 《超能奇才》 《冲浪企鹅2》 2018.04 《赛车总动员3》 《公牛历险记》 《寻梦环游记》 《湮灭》 《全球风暴》 《王牌特工2：黄金圈》 《极盗车神》 《速度与激情8》 2018.03 《雷神3：诸神黄昏》 《黑豹》 《正义联盟》 《银翼杀手：2049》 2018.02 《变形金刚5》 《加勒比海盗5：死无对证》 《异形：契约》 电视剧 2018.09 《无垠的太空》一二三季 2018.08 《西部世界》第二季 2018.07 《大群》第二季 2018.03 《亿万》第二季 2018.01 《黑镜》第四季 《瑞克和莫蒂》一二三季]]></content>
      <categories>
        <category>影音</category>
        <category>影视</category>
      </categories>
      <tags>
        <tag>影音</tag>
        <tag>电影</tag>
        <tag>电视剧</tag>
        <tag>动画</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[纪念老爷子——斯坦·李]]></title>
    <url>%2F2018%2F11%2F16%2F%E7%BA%AA%E5%BF%B5%E8%80%81%E7%88%B7%E5%AD%90%E2%80%94%E2%80%94%E6%96%AF%E5%9D%A6%C2%B7%E6%9D%8E%2F</url>
    <content type="text"><![CDATA[“漫威之父”斯坦·李去世了，突然间网络上到处都是缅怀老爷子的新闻，我是一个不喜欢跟风的人，但是作为漫威的非脑残粉，我觉得有必要写点东西来纪念一下老爷子，感谢他参与创作的形形色色的英雄和英雄故事，给我光影的享受，给我欢笑和感动，陪我度过人生的不少光阴。 流水的超级英雄，铁打的斯坦·李不知从何时起我，我开始喜欢上看电影，尤其是科幻电影和动画电影。而科幻电影中，漫威电影占了大半壁江山。记忆中，最开始接触的漫威电影便是由斯坦·李主创的《神奇四侠》改编的电影，然后是最早的《X战警》系列，再然后是漫威宇宙的灵魂开篇《钢铁侠》。看完钢铁侠后，有人说漫威在下一盘很大的棋，从此，我就在这盘棋中越走越远一发不可收拾。看着看着偶然发现漫威电影每一部总有同一个白胡子老头， 总是带着诙谐轻松的氛围扮演着不同的路人S，后来在网上一查，这便是大名鼎鼎的“漫威之父”——斯坦·李。后来看漫威电影有一个很大的乐趣就是找斯坦·李客串镜头这个漫威电影最大的彩蛋。并且每次和其他人一起看漫威电影一到路人S斯坦·李出现时，我都会兴高采烈的告诉他们这是“漫威之父”，不管是哪个超级英雄，不管是真人电影还是像《超能陆战队》一样的动画电影，老爷子都会客串一把。 斯坦·李走了，他的作品还在“英雄告诉我们，不用成为完人，你也可以行善。重点不是无所畏惧，而是要面对不公不义，这与力量的强大无关，而是在最不可能的时候，寻找到你的使命感。他们让我们知道，脆弱也没有关系，不管你有多么强大，因为，就算他们是英雄，他们亦是凡人。”斯坦·李客串合集 看过斯坦·李客串的漫威影视 《X战警》（2000.7.14） 《神奇四侠》（2005.7.8） 《X战警3》（2006.5.26） 《神奇四侠2》（2007.6.15） 《钢铁侠》（2008.5.2） 《无敌浩克》（2008.6.13） 《钢铁侠2》（2010.5.7） 《雷神》（2011.5.6） 《美国队长》（2011.7.22） 《复仇者联盟》（2012.5.4） 《超凡蜘蛛侠》（2012.7.3） 《钢铁侠3》（2013.5.3） 《雷神2》（2013.11.8） 《神盾局特工》第一季（2013.9.24） 《美国队长2》（2014.4.4） 《超凡蜘蛛侠2》（2014.5.2） 《银河护卫队》（2014.8.1） 《超能陆战队》（2014.11.7） 《复仇者联盟2》（2015.5.1） 《蚁人》（2015.7.17） 《死侍》（2016.2.12） 《美国队长3》（2016.5.6） 《X战警：天启》（2016.5.27） 《奇异博士》（2016.11.4） 《银河护卫队2》（2017.5.5） 《蜘蛛侠：英雄归来》（2017.7.7） 《雷神3》（2017.11.3） 《黑豹》（2018.2.16） 《复仇者联盟3》（2018.4.27） 《死侍2》（2018.5.18） 《蚁人2》（2018.7.6）]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>影音</tag>
        <tag>电影</tag>
        <tag>漫威</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git学习笔记]]></title>
    <url>%2F2017%2F11%2F07%2FGit%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[学习Git需要清楚的几个术语 Workspace：工作区 Index/Stage：暂存区，也叫索引 Repository：仓库区（或本地仓库），也存储库 Remote：远程仓库 工作区: 通过git init创建的代码库的所有文件但是不包括.git文件(版本库) 暂存区: 通过git add .//Xxx/Xxxx* 添加的修改,都是进入到暂存区了,肉眼不可见 通过 git status 可以看到修改的状态。 三种状态Git 有三种状态，你的文件可能处于其中之一：已提交(committed)、已修改(modified)和已暂存(staged)。 已提交表示数据已经安全的保存在本地数据库中。 已修改表示修改了文件，但还没保存到数据库中。 已暂存表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。 由此引入 Git 项目的三个工作区域的概念：Git 仓库、工作目录以及暂存区域。工作目录、暂存区域以及 Git 仓库如下图所示 Git 仓库目录是 Git 用来保存项目的元数据和对象数据库的地方。 这是 Git 中最重要的部分，从其它计算机克隆仓库时，拷贝的就是这里的数据。 工作目录是对项目的某个版本独立提取出来的内容。 这些从 Git 仓库的压缩数据库中提取出来的文件，放在磁盘上供你使用或修改。 暂存区域是一个文件，保存了下次将提交的文件列表信息，一般在 Git 仓库目录中。 有时候也被称作‘索引’，不过一般说法还是叫暂存区域。 用户信息当安装完 Git 应该做的第一件事就是设置用户名称与邮件地址。这样做很重要，因为每一个 Git 的提交都会使用这些信息，并且它会写入到每一次提交中，不可更改：12$ git config --global user.name &quot;maxsu&quot;$ git config --global user.email maxsu@yiibai.com 设置文本编辑器1$ git config --global core.editor atom 检查配置信息如果想要检查你的配置，可以使用 git config --list 命令来列出所有 Git 当时能找到的配置。 常用基础命令git add 指定跟踪文件，然后执行 git commit 提交12$ git add hello.py$ git commit -m &apos;修改说明&apos; 要查看哪些文件处于什么状态，可以用 git status 命令。 忽略文件总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。我们可以创建一个名为 .gitignore 的文件，列出要忽略的文件模式。 .gitignore 的格式规范如下： 所有空行或者以 ＃ 开头的行都会被 Git 忽略。 可以使用标准的 glob 模式匹配。 匹配模式可以以(/)开头防止递归。 匹配模式可以以(/)结尾指定目录。 要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号(!)取反。 所谓的 glob 模式是指 shell 所使用的简化了的正则表达式。 提示：GitHub 有一个十分详细的针对数十种项目及编程语言的 .gitignore 文件列表，你可以在 http://github.com/github/gitignore 找到它。 查看已暂存和未暂存的修改如果 git status 命令的输出对于你来说过于模糊，你想知道具体修改了什么地方，可以用 git diff 命令。 请注意，git diff 本身只显示尚未暂存的改动，而不是自上次提交以来所做的所有改动。 所以有时候你一下子暂存了所有更新过的文件后，运行 git diff 后却什么也没有，就是这个原因。 然后用 git diff --cached 查看已经暂存起来的变化：(--staged 和 --cached 是同义词) 跳过使用暂存区域Git 提供了一个跳过使用暂存区域的方式， 只要在提交的时候，给 git commit 加上 -a 选项，Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 git add 步骤。 移除文件 git rm 移除已跟踪文件（同时会删除工作目录中的文件）。 如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f(注：即 force 的首字母)。 这是一种安全特性，用于防止误删还没有添加到快照的数据，这样的数据不能被 Git 恢复。 另外一种情况是，想让文件保留在磁盘，但是并不想让 Git 继续跟踪。 当你忘记添加 .gitignore 文件，不小心把一个很大的日志文件或一堆 .a 这样的编译生成文件添加到暂存区时，可以使用 --cached 选项：12345678910$ git rm --cached mytext.txt$ git statusOn branch masterYour branch is ahead of &apos;origin/master&apos; by 1 commit. (use &quot;git push&quot; to publish your local commits)Changes to be committed: (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage) deleted: mytext.txt git rm 命令后面可以列出文件或者目录的名字，也可以使用 glob 模式。 移动文件1$ git mv file_from file_to 查看提交历史默认不用任何参数的话，git log 会按提交时间列出所有的更新，最近的更新排在最上面。 显示最近两次提交内容差异：1$ git log -p -2 每次提交的简略的统计信息：1$ git log --stat 另外一个常用的选项是 --pretty 。 这个选项可以指定使用不同于默认格式的方式展示提交历史。 这个选项有一些内建的子选项供你使用。 比如用 oneline 将每个提交放在一行显示，查看的提交数很大时非常有用。 另外还有 short ，full 和 fuller 可以用，展示的信息或多或少有些不同。123456789$ git log --pretty=onelineca82a6dff817ec66f44342007202690a93763949 changed the version number085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7 removed unnecessary testa11bef06a3f659402fe7563abf99ad00de2209e6 first commit$ git log --pretty=format:&quot;%h - %an, %ar : %s&quot;ca82a6d - Scott Chacon, 6 years ago : changed the version number085bb3b - Scott Chacon, 6 years ago : removed unnecessary testa11bef0 - Scott Chacon, 6 years ago : first commit 撤消操作有时候我们提交完了才发现漏掉了几个文件没有添加，或者提交信息写错了，可以运行带有 --amend 选项的提交命令尝试重新提交：1$ git commit --amend 这个命令会将暂存区中的文件提交。 如果自上次提交以来你还未做任何修改(例如，在上次提交后马上执行了此命令)，那么快照会保持不变，而你所修改的只是提交信息。 例如，提交后发现忘记了暂存某些需要的修改，可以像下面这样操作：123$ git commit -m &apos;initial commit&apos;$ git add forgotten_file$ git commit --amend 最终你只会有一个提交 - 第二次提交将代替第一次提交的结果。 取消暂存的文件reset 后面不跟参数就是取消所有。1git reset HEAD mytext.txt 撤消对文件的修改1234567891011121314git statusOn branch masterYour branch is up-to-date with &apos;origin/master&apos;.Changes to be committed: (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage) new file: 123Changes not staged for commit: (use &quot;git add &lt;file&gt;...&quot; to update what will be committed) (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory) modified: 123 按照说明输入命令撤销1git checkout -- 123 隐藏(Stash)操作要切换任务做其他的，但不想提交一直在做的工作; 那么可以把当前工作的改变隐藏起来。 要将一个新的存根推到堆栈上，运行 git stash 命令。通过使用 git stash list 命令来查看已存在更改的列表。执行 git stash pop 命令即可从堆栈中删除更改并将其放置在当前工作目录中。 查看远程仓库 如果想查看你已经配置的远程仓库服务器，可以运行 git remote 命令。 它会列出你指定的每一个远程服务器的简写。 指定选项 -v，会显示需要读写远程仓库使用的 Git 保存的简写与其对应的 URL。 添加远程仓库1git remote add &lt;shortname&gt; &lt;url&gt; 从远程仓库中抓取与拉取1git fetch [remote-name] 这个命令会访问远程仓库，从中拉取所有还没有的数据。执行完成后，将会拥有那个远程仓库中所有分支的引用，可以随时合并或查看。 如果使用 clone 命令克隆了一个仓库，命令会自动将其添加为远程仓库并默认以 “origin” 为简写。 所以，git fetch origin 会抓取克隆(或上一次抓取)后新推送的所有工作。 必须注意 git fetch 命令会将数据拉取到本地仓库, 它并不会自动合并或修改当前的工作。如果你有一个分支设置为跟踪一个远程分支，可以使用 git pull 命令来自动的抓取然后合并远程分支到当前分支。 这对你来说可能是一个更简单或更舒服的工作流程；默认情况下，git clone 命令会自动设置本地 master 分支跟踪克隆的远程仓库的 master 分支(或不管是什么名字的默认分支)。 运行 git pull 通常会从最初克隆的服务器上抓取数据并自动尝试合并到当前所在的分支。 推送到远程仓库推送命令： git push [remote-name] [branch-name] 。1$ git push origin master 查看远程仓库查看远程仓库的更多信息： remote show [remote-name] 。1$ git remote show origin 远程仓库的移除与重命名1$ git remote rename old new 更多详细命令请参考https://git-scm.com/book/zh/v2http://www.yiibai.com/git/]]></content>
      <categories>
        <category>技术</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Git学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git常用简单命令]]></title>
    <url>%2F2017%2F11%2F07%2FGit%E5%B8%B8%E7%94%A8%E7%AE%80%E5%8D%95%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677//创建文件夹$ mkdir learngit$ cd learngit//查看文件路径$ pwd/Users/michael/learngit//初始化一个Git仓库$ git init//添加文件到Git仓库，分两步：$ git add readme.txt$ git commit -m &quot;...&quot;//查看仓库当前的状态$ git status//查看difference$ git diff readme.txt//查看历史记录$ git log//信息太多可用如下$ git log --pretty=oneline//用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^//当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。//回退到上一个版本$ git reset --hard HEAD^//查看命令历史$ git reflog//回退到id是1234..的版本$ git reset --hard 1234..//回到最近一次git commit或git add时的状态$ git checkout -- readme.txt//把暂存区的修改撤销掉（unstage），重新放回工作区$ git reset HEAD readme.txt//删除一个文件$ git rm test.txt//关联一个远程库$ git remote add origin http://192.168.0.62:82/cmj/learnGit.git//推送master分支的所有内容，远程的话commit之后，最后还需要push到远程库，远程库才会发生修改$ git push -u origin master//推送最新修改$ git push origin master//用http协议克隆一个仓库$ git clone http://192.168.0.62:82/cmj/learnGit.git//我们创建dev分支，然后切换到dev分支$ git checkout -b dev//等同于以下两句&#123;//创建分支$ git branch dev//切换分支到dev$ git checkout dev&#125;//查看当前分支，前面带*的就是当前分支$ git branch//分支某合并到当前分支$ git merge dev//删除分支$ git branch -d dev]]></content>
      <categories>
        <category>技术</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo+Next主题优化]]></title>
    <url>%2F2017%2F11%2F07%2FHexo-Next%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[1. 置主题风格打开 themes/next/_config.yml 文件，搜索 scheme 关键字，将你需用启用的 scheme 前面注释 # 去除即可。123456789# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemes#scheme: Muse # 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白#scheme: Mist # Muse 的紧凑版本，整洁有序的单栏外观scheme: Pisces # 双栏 Scheme，小家碧玉似的清新#scheme: Gemini # 类似 Pisces 2. 设置菜单项的显示文本和图标NexT 使用的是 Font Awesome 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下图标模糊的问题。 2.1 设置菜单项的显示中文文本：打开 themes/next/languages/zh-Hans.yml 文件,搜索 menu 关键字，修改对应中文或者新增。123456789101112menu: home: 首页 archives: 归档 categories: 分类 tags: 标签 about: 关于 search: 搜索 schedule: 日程表 sitemap: 站点地图 commonweal: 公益404 # 新增menu catalogue: 目录 2.2 设定菜单项的文件目录和对应图标（新版两项合并）打开 themes/next/_config.yml 文件，搜索 menu_icons 关键字，修改对应图标名称或者新增对应 menu 的图标。123456789101112131415161718192021222324252627# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).# Usage: `Key: /link/ || icon`# Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.# Value before `||` delimeter is the target link.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.menu: home: / || home archives: /archives/ || history categories: /categories/ || list tags: /tags/ || tags tools: /categories/工具资源/ || briefcase about: /about/ || user #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat# Enable/Disable menu icons.# Icon Mapping:# Map a menu item to a specific FontAwesome icon name.# Key is the name of menu item and value is the name of FontAwesome icon. Key is case-senstive.# When an question mask icon presenting up means that the item has no mapping icon.menu_icons: enable: true 除了 home， archives , /后面都需要手动创建这个页面 2.3 创建菜单项对应文件目录,以分类为例在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 categories ：12$ cd your-hexo-site$ hexo new page categories 编辑刚新建的页面,设置分类123456---title: 分类date: 2014-12-22 12:39:04categories: Testing #分类名type: "categories"--- 3. 头像设置3.1 添加头像打开 themes/next/_config.yml 文件，搜索 Sidebar Avatar 关键字，去掉 avatar 前面的#：1234# Sidebar Avatar# in theme directory(source/images): /images/avatar.jpg# in site directory(source/uploads): /uploads/avatar.jpgavatar: http://example.com/avatar.png 或者使用本地图片,把图片放入 themes/next/source/images 下,修改 avatar：1avatar: /images/avatar.gif 3.2 设置头像边框为圆形框打开位于 themes/next/source/css/_common/components/sidebar/sidebar-author.syl 文件,修改如下:123456789101112.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; // 修改头像边框 border-radius: 50%; -webkit-border-radius: 50%; -moz-border-radius: 50%;&#125; 3.3 特效：鼠标放置头像上旋转123456789101112131415161718192021.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; // 修改头像边框 border-radius: 50%; -webkit-border-radius: 50%; -moz-border-radius: 50%; // 设置旋转 transition: 1.4s all;&#125;// 可旋转的圆形头像,`hover`动作.site-author-image:hover &#123; -webkit-transform: rotate(360deg); -moz-transform: rotate(360deg); -ms-transform: rotate(360deg); -transform: rotate(360deg);&#125; 4. 浏览页面的时候显示当前浏览进度打开 themes/next/_config.yml ,搜索关键字 scrollpercent ,把 false 改为 true。12# Scroll percent label in b2t buttonscrollpercent: true 如果想把 top按钮放在侧边栏,打开 themes/next/_config.yml ,搜索关键字 b2t ,把 false 改为 true。12345# Back to top in sidebar b2t: true # Scroll percent label in b2t button scrollpercent: true 5. 侧边栏设置5.1 设置侧边栏社交链接打开 themes/next/_config.yml 文件,搜索关键字 social ,然后添加社交站点名称与地址即可。 123456789101112131415# ---------------------------------------------------------------# Sidebar Settings# ---------------------------------------------------------------# Social Links.# Usage: `Key: permalink || icon`# Key is the link label showing to end users.# Value before `||` delimeter is the target permalink.# Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.social: E-Mail: mailto:yourname@gmail.com || envelope Google: https://plus.google.com/yourname || google Twitter: https://twitter.com/yourname || twitter FB Page: https://www.facebook.com/yourname || facebook # 等等 5.2 设置侧边栏社交图标打开 themes/next/_config.yml 文件,搜索关键字 social_icons ，添加社交站点名称（注意大小写）图标，Font Awesome图标地。 5.3 RSS在你 Hexo 站点目录下：1$ npm install hexo-generator-feed --save 打开 Hexo 站点下的 _config.yml ,添加如下配置：12345678# feed# Dependencies: https://github.com/hexojs/hexo-generator-feedfeed: type: atom path: atom.xml limit: 20 hub: content: 5.4 友情链接打开 themes/next/_config.yml 文件,搜索关键字 Blog rolls：1234567# Blog rollslinks_title: 友情链接 #标题links_layout: block #布局，一行一个连接#links_layout: inlinelinks: #连接 baidu: http://example.com/ google: http://example.com/ 6. 主页文章添加边框阴影效果打开 themes/next/source/css/_custom/custom.styl ,向里面加代码:12345678// 主页文章添加阴影效果.post &#123; margin-top: 0px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);&#125; 7. 修改文章间分割线打开 themes/next/source/css/_common/components/post/post-eof.styl ,修改：12345678910.posts-expand &#123; .post-eof &#123; display: block; // margin: $post-eof-margin-top auto $post-eof-margin-bottom; width: 0%; //分割线长度 height: 0px; // 分割线高度 background: $grey-light; text-align: center; &#125;&#125; 8. 代码块自定义样式123456789101112131415// Custom styles.code &#123; color: #ff7600; background: #fbf7f8; margin: 2px;&#125;// 边框的自定义样式.highlight, pre &#123; margin: 5px 0; padding: 5px; border-radius: 3px;&#125;.highlight, code, pre &#123; border: 1px solid #d6d6d6;&#125; 9. 开启版权声明主题配置文件下,搜索关键字 post_copyright , enable 改为 true：12345# Declare license on postspost_copyright: enable: true license: CC BY-NC-SA 4.0 license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/ 10. 自定义文章底部版权声明效果：1234作者：Dragonstyle链接：http://www.dragonstyle.win/2017/09/06/Android-Studio个人设置/來源：简书版权声明： 本博客所有文章除特别声明外，均采用 CC BY-NC-SA 4.0 许可协议。转载请注明出处！ 在目录 themes/next/layout/_macro/ 下添加 my-copyright.swig ,内容如下:123456789101112131415161718192021222324252627282930313233&#123;% if page.copyright %&#125;&lt;div class="my_post_copyright"&gt; &lt;script src="//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"&gt;&lt;/script&gt; &lt;!-- JS库 sweetalert 可修改路径 --&gt; &lt;script type="text/javascript" src="http://jslibs.wuxubj.cn/sweetalert_mini/jquery-1.7.1.min.js"&gt;&lt;/script&gt; &lt;script src="http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.min.js"&gt;&lt;/script&gt; &lt;link rel="stylesheet" type="text/css" href="http://jslibs.wuxubj.cn/sweetalert_mini/sweetalert.mini.css"&gt; &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format("YYYY年MM月DD日 - HH:mm:ss") &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format("YYYY年MM月DD日 - HH:mm:ss") &#125;&#125;&lt;/p&gt; &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href="&#123;&#123; url_for(page.path) &#125;&#125;" title="&#123;&#123; page.title &#125;&#125;"&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt; &lt;span class="copy-path" title="点击复制文章链接"&gt;&lt;i class="fa fa-clipboard" data-clipboard-text="&#123;&#123; page.permalink &#125;&#125;" aria-label="复制成功！"&gt;&lt;/i&gt;&lt;/span&gt; &lt;/p&gt; &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class="fa fa-creative-commons"&gt;&lt;/i&gt; &lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" title="Attribution-NonCommercial-NoDerivatives 4.0 International (CC BY-NC-ND 4.0)"&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 转载请保留原文链接及作者。&lt;/p&gt; &lt;/div&gt;&lt;script&gt; var clipboard = new Clipboard('.fa-clipboard'); clipboard.on('success', $(function()&#123; $(".fa-clipboard").click(function()&#123; swal(&#123; title: "", text: '复制成功', html: false, timer: 500, showConfirmButton: false &#125;); &#125;); &#125;)); &lt;/script&gt;&#123;% endif %&#125; 在目录 themes/next/source/css/_common/components/post/ 下添加 my-post-copyright.styl,内容如下:123456789101112131415161718192021222324252627282930313233343536373839404142434445.my_post_copyright &#123; width: 85%; max-width: 45em; margin: 2.8em auto 0; padding: 0.5em 1.0em; border: 1px solid #d3d3d3; font-size: 0.93rem; line-height: 1.6em; word-break: break-all; background: rgba(255,255,255,0.4);&#125;.my_post_copyright p&#123;margin:0;&#125;.my_post_copyright span &#123; display: inline-block; width: 5.2em; color: #333333; // title color font-weight: bold;&#125;.my_post_copyright .raw &#123; margin-left: 1em; width: 5em;&#125;.my_post_copyright a &#123; color: #808080; border-bottom:0;&#125;.my_post_copyright a:hover &#123; color: #0593d3; // link color text-decoration: underline;&#125;.my_post_copyright:hover .fa-clipboard &#123; color: #000;&#125;.my_post_copyright .post-url:hover &#123; font-weight: normal;&#125;.my_post_copyright .copy-path &#123; margin-left: 1em; width: 1em; +mobile()&#123;display:none;&#125;&#125;.my_post_copyright .copy-path:hover &#123; color: #808080; cursor: pointer;&#125; 修改 themes/next/layout/_macro/post.swig ,在代码如下：12345&#123;% if theme.wechat_subscriber.enabled and not is_index %&#125; &lt;div&gt; &#123;% include 'wechat-subscriber.swig' %&#125; &lt;/div&gt; &#123;% endif %&#125; 之前添加增加如下代码：12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'my-copyright.swig' %&#125; &#123;% endif %&#125;&lt;/div&gt; 修改 themes/next/source/css/_common/components/post/post.styl 文件，在最后一行增加代码：1@import "my-post-copyright" 设置新建文章自动开启 copyright,即新建文章自动显示自定义的版权声明,设置 your site/scaffolds/post.md文件12345678---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:type: "categories"categories:copyright: true #新增,开启--- 11. 在右上角或者左上角实现fork me on github选择样式GitHub Ribbons,修改图片跳转链接,并复制文本框中的代码,将如下地方代码换为自己Github主页：打开 themes/next/layout/_layout.swig 文件，把代码复制到&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;下面。 12. 修改文章底部的那个带#号的标签打开 themes/next/layout/_macro/post.swig 文件,搜索 rel=&quot;tag&quot;&gt;# ,将 # 换成 &lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;12345&lt;div class="post-tags"&gt; &#123;% for tag in post.tags %&#125; &lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;&lt;i class="fa fa-tag"&gt;&lt;/i&gt; &#123;&#123; tag.name &#125;&#125;&lt;/a&gt; &#123;% endfor %&#125;&lt;/div&gt; 13. 添加顶部加载条打开 themes/next/_config.yml ，搜索关键字 pace ,设置为 true ,可以更换加载样式：12345678910111213141516171819# Progress bar in the top during page loading.pace: true# Themes list:#pace-theme-big-counter#pace-theme-bounce#pace-theme-barber-shop#pace-theme-center-atom#pace-theme-center-circle#pace-theme-center-radar#pace-theme-center-simple#pace-theme-corner-indicator#pace-theme-fill-left#pace-theme-flash#pace-theme-loading-bar#pace-theme-mac-osx#pace-theme-minimal# For example# pace_theme: pace-theme-center-simplepace_theme: pace-theme-flash #替换更换样式 14. 本地搜索在你站点的根目录下1$ npm install hexo-generator-searchdb --save 打开 Hexo 站点的 _config.yml,添加配置12345search: path: search.xml field: post format: html limit: 10000 打开 themes/next/_config.yml ,搜索关键字 local_search ,设置为 true：123456789# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 15. 修改网页底部 在图标库中找到你自己喜欢的图标, 修改桃心,打开 themes/next_config.yml ,搜索关键字 authoricon,替换图标名 12# icon between year and author @Footerauthoricon: id-card 隐藏网页底部 Hexo 强力驱动 打开主题配置文件,搜索关键字 copyright ，如下:12# Footer `powered-by` and `theme-info` copyrightcopyright: false 16. 博文置顶打开 Hexo 站点下 node_modules/hexo-generator-index/lib/generator.js 文件。代码全部替换为：(next 5.1以后主题已自带此功能)12345678910111213141516171819202122232425262728'use strict';var pagination = require('hexo-pagination');module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排 &#125;); var paginationDir = config.pagination_dir || 'page'; return pagination('', posts, &#123; perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: &#123; __index: true &#125; &#125;);&#125;; 打开文章添加top字段,设置数值，数值越大文章越靠前：1234567---layout: layouttitle: 标签1date: 2017-08-18 15:41:18tags: 标签1top: 100--- 17. 统计功能，统计功能,显示文章字数统计,阅读时长,总字数在站点的根目录下：1$ npm i --save hexo-wordcount 打开 themes/next/_config.yml ，搜索关键字 post_wordcount：1234567891011# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true #字数统计 wordcount: true #预览时间 min2read: true #总字数,显示在页面底部 totalcount: true separated_meta: true 18. 修改文章内文本连接样式打开 themes/next/source/css/_custom/custom.styl,添加代码：1234567891011// 文章内链接文本样式.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; 19. 每篇文章末尾统一添加“本文结束”标记在路径 /themes/next/layout/_macro 中新建 passage-end-tag.swig 文件,并添加以下内容：12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;------ 本文结束------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 打开 themes/next/layout/_macro/post.swig 文件,添加：12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125; &#123;% endif %&#125; &lt;/div&gt; 然后打开主题配置文件 _config.yml,在末尾添加：123# 文章末尾添加“本文结束”标记passage_end_tag:enabled: true 20. 文章顶部显示更新时间打开主题配置文件 _config.yml ,搜索关键字 updated_at 设置为 true ：123456# Post meta display settingspost_meta: item_text: true created_at: true updated_at: true categories: true 编辑文章,增加关键字updated（next可以根据文章改变时间自动更改）12345---layout: layouttitle: 关于date: 2017-08-18 15:41:18updated: 2017-09-05 20:18:54 #手动添加更新时间 21. 修改访问URL路径默认情况下访问URL路径为：domain/2017/08/18/关于本站,修改为 domain/About/关于本站。编辑 Hexo 站点下的 _config.yml 文件，修改其中的 permalink 字段：1permalink: :category/:title/ 22. 给代码块添加复制功能 下载插件clipboard.js 。 打开 themes/next/source/lib/ ,新建文件夹 clipboard。 把下载 clipboard.js下的 src 文件夹下的文件拖动到 clipboard文件夹下。 打开 themes/next/source/js/src/ ,新建文件 custom.js ,代码如下: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102//此函数用于创建复制按钮function createCopyBtns() &#123; var $codeArea = $("figure table"); //查看页面是否具有代码区域，没有代码块则不创建 复制按钮 if ($codeArea.length &gt; 0) &#123; //复制成功后将要干的事情 function changeToSuccess(item) &#123; $imgOK = $("#copyBtn").find("#imgSuccess"); if ($imgOK.css("display") == "none") &#123; $imgOK.css(&#123; opacity: 0, display: "block" &#125;); $imgOK.animate(&#123; opacity: 1 &#125;, 1000); setTimeout(function() &#123; $imgOK.animate(&#123; opacity: 0 &#125;, 2000); &#125;, 2000); setTimeout(function() &#123; $imgOK.css("display", "none"); &#125;, 4000); &#125;; &#125;; //创建 全局复制按钮，仅有一组。包含：复制按钮，复制成功响应按钮 //值得注意的是：1.按钮默认隐藏，2.位置使用绝对位置 position: absolute; (position: fixed 也可以，需要修改代码) $(".post-body").before('&lt;div id="copyBtn" style="opacity: 0; position: absolute;top:0px;display: none;line-height: 1; font-size:1.5em"&gt;&lt;span id="imgCopy" &gt;&lt;i class="fa fa-paste fa-fw"&gt;&lt;/i&gt;&lt;/span&gt;&lt;span id="imgSuccess" style="display: none;"&gt;&lt;i class="fa fa-check-circle fa-fw" aria-hidden="true"&gt;&lt;/i&gt;&lt;/span&gt;'); //创建 复制 插件，绑定单机时间到 指定元素，支持JQuery var clipboard = new Clipboard('#copyBtn', &#123; target: function() &#123; //返回需要复制的元素内容 return document.querySelector("[copyFlag]"); &#125;, isSupported: function() &#123; //支持复制内容 return document.querySelector("[copyFlag]"); &#125; &#125;); //复制成功事件绑定 clipboard.on('success', function(e) &#123; //清除内容被选择状态 e.clearSelection(); changeToSuccess(e); &#125;); //复制失败绑定事件 clipboard.on('error', function(e) &#123; console.error('Action:', e.action); console.error('Trigger:', e.trigger); &#125;); //鼠标 在复制按钮上滑动和离开后渐变显示/隐藏效果 $("#copyBtn").hover( function() &#123; $(this).stop(); $(this).css("opacity", 1); &#125;, function() &#123; $(this).animate(&#123; opacity: 0 &#125;, 2000); &#125; ); &#125;&#125;//感应鼠标是否在代码区$("figure").hover( function() &#123; //-------鼠标活动在代码块内 //移除之前含有复制标志代码块的 copyFlag $("[copyFlag]").removeAttr("copyFlag"); //在新的（当前鼠标所在代码区）代码块插入标志：copyFlag $(this).find(".code").attr("copyFlag", 1); //获取复制按钮 $copyBtn = $("#copyBtn"); if ($copyBtn.lenght != 0) &#123; //获取到按钮的前提下进行一下操作 //停止按钮动画效果 //设置为 显示状态 //修改 复制按钮 位置到 当前代码块开始部位 //设置代码块 左侧位置 $copyBtn.stop(); $copyBtn.css("opacity", 0.8); $copyBtn.css("display", "block"); $copyBtn.css("top", parseInt($copyBtn.css("top")) + $(this).offset().top - $copyBtn.offset().top + 3); $copyBtn.css("left", -$copyBtn.width() - 3); &#125; &#125;, function() &#123; //-------鼠标离开代码块 //设置复制按钮可见度 2秒内到 0 $("#copyBtn").animate(&#123; opacity: 0 &#125;, 2000); &#125;);//页面载入完成后，创建复制按钮$(document).ready(function() &#123; createCopyBtns();&#125;); 打开 themes/next/layout/_custom/ ,新建文件 custom.swig ，代码如下: 12&lt;script type="text/javascript" src="/lib/clipboard/clipboard.js"&gt;&lt;/script&gt;&lt;script type="text/javascript" src="/js/src/custom.js"&gt;&lt;/script&gt; 修改文件 themes/next/layout/_layout.swig ,在标签 &lt;/body&gt;上面插入代码: 1&#123;% include '_custom/custom.swig' %&#125; 23. 新建404界面在站点根目录下,输入 hexo new page 404 ,默认在 Hexo 站点下/source/404/index.md打开新建的404界面，在顶部插入一行，写上 permalink: /404 ，这表示指定该页固定链接为 http://&quot;主页&quot;/404.html。123456---title: #404 Not Found：该页无法显示date: 2017-09-06 15:37:18comments: falsepermalink: /404--- 如果你不想编辑属于自己的404界面,可以显示腾讯公益404界面,代码如下：123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8;"/&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt; &lt;meta name="robots" content="all" /&gt; &lt;meta name="robots" content="index,follow"/&gt; &lt;link rel="stylesheet" type="text/css" href="https://qzone.qq.com/gy/404/style/404style.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;script type="text/plain" src="http://www.qq.com/404/search_children.js" charset="utf-8" homePageUrl="/" homePageName="回到我的主页"&gt; &lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/data.js" charset="utf-8"&gt;&lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/page.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 24. 静态资源压缩在站点目录下：1$ npm install gulp -g 安装gulp插件：12345npm install gulp-minify-css --savenpm install gulp-uglify --savenpm install gulp-htmlmin --savenpm install gulp-htmlclean --savenpm install gulp-imagemin --save 在 Hexo 站点下添加 gulpfile.js文件，文件内容如下：123456789101112131415161718192021222324252627282930313233343536373839404142434445var gulp = require('gulp');var minifycss = require('gulp-minify-css');var uglify = require('gulp-uglify');var htmlmin = require('gulp-htmlmin');var htmlclean = require('gulp-htmlclean');var imagemin = require('gulp-imagemin');// 压缩css文件gulp.task('minify-css', function() &#123; return gulp.src('./public/**/*.css') .pipe(minifycss()) .pipe(gulp.dest('./public'));&#125;);// 压缩html文件gulp.task('minify-html', function() &#123; return gulp.src('./public/**/*.html') .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest('./public'))&#125;);// 压缩js文件gulp.task('minify-js', function() &#123; return gulp.src(['./public/**/.js','!./public/js/**/*min.js']) .pipe(uglify()) .pipe(gulp.dest('./public'));&#125;);// 压缩 public/demo 目录内图片gulp.task('minify-images', function() &#123; gulp.src('./public/demo/**/*.*') .pipe(imagemin(&#123; optimizationLevel: 5, //类型：Number 默认：3 取值范围：0-7（优化等级） progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片 interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染 multipass: false, //类型：Boolean 默认：false 多次优化svg直到完全优化 &#125;)) .pipe(gulp.dest('./public/uploads'));&#125;);// 默认任务gulp.task('default', [ 'minify-html','minify-css','minify-js','minify-images']); 只需要每次在执行 generate 命令后执行 gulp 就可以实现对静态资源的压缩，压缩完成后执行 deploy 命令同步到服务器：123hexo ggulphexo d 25. 本地站点推送到GitHub上在站点更目录下：1$ npm install hexo-deployer-git --save 在 Hexo 站点的 _config.yml 中配置 deploy：123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: &lt;repository url&gt; #your github.io.git branch: master 1$ hexo clean 1$ hexo d --g hexo g # 生成本地 public 静态文件,hexo d # 部署到 Github 上,也可以缩写成：hexo g –d 。 26. 添加文章书写样式26.1 文字增加背景色块打开 themes/next/source/css/_custom 下的 custom.styl 文件,添加属性样式：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556// 颜色块-黄span#inline-yellow &#123;display:inline;padding:.2em .6em .3em;font-size:80%;font-weight:bold;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:0;background-color: #f0ad4e;&#125;// 颜色块-绿span#inline-green &#123;display:inline;padding:.2em .6em .3em;font-size:80%;font-weight:bold;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:0;background-color: #5cb85c;&#125;// 颜色块-蓝span#inline-blue &#123;display:inline;padding:.2em .6em .3em;font-size:80%;font-weight:bold;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:0;background-color: #2780e3;&#125;// 颜色块-紫span#inline-purple &#123;display:inline;padding:.2em .6em .3em;font-size:80%;font-weight:bold;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:0;background-color: #9954bb;&#125; 在你需要编辑的文章地方。放置如下代码：1234&lt;span id="inline-blue"&gt; 站点配置文件 &lt;/span&gt;&lt;span id="inline-purple"&gt; 主题配置文件 &lt;/span&gt;&lt;span id="inline-yellow"&gt; 站点配置文件 &lt;/span&gt;&lt;span id="inline-green"&gt; 主题配置文件 &lt;/span&gt; 26.2 下载样式打开 themes/next/source/css/_custom/custom.styl 文件,添加属性样式：1234567891011121314a#download &#123;display: inline-block;padding: 0 10px;color: #000;background: transparent;border: 2px solid #000;border-radius: 2px;transition: all .5s ease;font-weight: bold;&amp;:hover &#123;background: #000;color: #fff;&#125;&#125; 在你需要编辑的文章地方。放置如下代码：1&lt;a id="download" href="https://git-scm.com/download/win"&gt;&lt;i class="fa fa-download"&gt;&lt;/i&gt;&lt;span&gt; Download Now&lt;/span&gt; &lt;/a&gt; 26.3 在文档中增加图标, Font Awesome 提供图标1&lt;i class=&quot;fa fa-pencil&quot;&gt;&lt;/i&gt;支持Markdown 27. 实现点击出现桃心效果 复制网页代码 新建 love.js 文件并且将代码复制进去，然后保存。 将 love.js文件放到路径 /themes/next/source/js/src 里面 然后打开 \themes\next\layout\_layout.swig 文件,在末尾（在前面引用会出现找不到的bug）添加以下代码：12&lt;!-- 页面点击小红心 --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt; 28. 添加热度 next主题集成leanCloud,根据next官方文档设置阅读次数统计（LeanCloud) ，然后打开 /themes/next/layout/_macro/post.swig ,在画红线的区域添加 ℃： 然后打开 /themes/next/languages/zh-Hans.yml ,将 visitors 汉化为热度就可以了： 12345678910111213post: created: 创建于 modified: 更新于 sticky: 置顶 posted: 发表于 in: 分类于 read_more: 阅读全文 untitled: 未命名 toc_empty: 此文章未包含目录 visitors: 热度 wordcount: 字数统计 min2read: 阅读时长 totalcount: 博客全站字数 29. 添加 README.md 文件每个项目下一般都有一个 README.md 文件，但是使用 hexo 部署到仓库后，项目下是没有 README.md 文件的。 在 Hexo 目录下的 source 根目录下添加一个 README.md 文件，修改站点配置文件 _config.yml ，将 skip_render 参数的值设置为：1skip_render: README.md 保存退出即可。再次使用 hexo d 命令部署博客的时候就不会在渲染 README.md 这个文件了。 30. 文章加密访问打开 themes/next/layout/_partials/head.swig文件,在 之前插入代码： 12345678910 &lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt; 在文章上应用：12345678910---title: 2017观看影视date: 2017-09-25 16:10:03type:top:comments:categories: [影音, 影视]tags: [影音, 电影, 电视剧, 动画]password: 123456--- 31. 添加jiathis分享在主题配置文件中,做如下配置：1234567# Share# This plugin is more useful in China, make sure you known how to use it.# And you can find the use guide at official webiste: http://www.jiathis.com/.# Warning: JiaThis does not support https.jiathis: true ##uid: Get this uid from http://www.jiathis.com/#add_this_id: 如果你想自定义话，打开 themes/next/layout/_partials/share/jiathis.swig 根据官网代码修改。 32. 修改打赏字体不闪动修改文件 next/source/css/_common/components/post/post-reward.styl，然后注释其中的函数 wechat:hover 和 alipay:hover ，如下：123456789101112/* 注释文字闪动函数 #wechat:hover p&#123; animation: roll 0.1s infinite linear; -webkit-animation: roll 0.1s infinite linear; -moz-animation: roll 0.1s infinite linear;&#125; #alipay:hover p&#123; animation: roll 0.1s infinite linear; -webkit-animation: roll 0.1s infinite linear; -moz-animation: roll 0.1s infinite linear;&#125;*/ 33. 自定义鼠标样式打开 themes/next/source/css/_custom/custom.styl ,在里面写下如下代码：1234567// 鼠标样式 * &#123; cursor: url("http://om8u46rmb.bkt.clouddn.com/sword2.ico"),auto!important &#125; :active &#123; cursor: url("http://om8u46rmb.bkt.clouddn.com/sword1.ico"),auto!important &#125; 其中 url 里面必须是 ico 图片，ico 图片可以上传到网上（我是使用七牛云图床），然后获取外链，复制到 url 里就行了。 34. 网站标题栏背景颜色当使用Pisces主题时，网站标题栏背景颜色是黑色的，感觉不好看，可以在 source/css/_schemes/Pisces/_brand.styl 中修改：123456789101112.site-meta &#123; padding: 20px 0; color: white; background: $blue-dodger; //修改为自己喜欢的颜色 +tablet() &#123; box-shadow: 0 0 16px rgba(0,0,0,0.5); &#125; +mobile() &#123; box-shadow: 0 0 16px rgba(0,0,0,0.5); &#125;&#125; 但是，我们一般不主张这样修改源码的，在 next/source/css/_custom 目录下面专门提供了 custom.styl 供我们自定义样式的，因此也可以在 custom.styl 里面添加：1234// Custom styles..site-meta &#123; background: $blue; //修改为自己喜欢的颜色&#125; 35. 修改内容区域的宽度我们用Next主题是发现在电脑上阅读文章时内容两边留的空白较多，这样在浏览代码块时经常要滚动滚动条才能阅读完整，体验不是很好，下面提供修改内容区域的宽度的方法。NexT 对于内容的宽度的设定如下： 700px，当屏幕宽度 &lt; 1600px 900px，当屏幕宽度 &gt;= 1600px 移动设备下，宽度自适应 如果你需要修改内容的宽度，同样需要编辑样式文件。在Mist和Muse风格可以用下面的方法： 编辑主题的 source/css/_variables/custom.styl 文件，新增变量：12345// 修改成你期望的宽度$content-desktop = 700px// 当视窗超过 1600px 后的宽度$content-desktop-large = 900px 当你使用Pisces风格时可以用下面的方法：123header&#123; width: 90%; &#125;.container .main-inner &#123; width: 90%; &#125;.content-wrap &#123; width: calc(100% - 260px); &#125; 36. 修改Logo字体在 themes/next/source/css/_custom/custom.styl 中添加如下代码：12345678@font-face &#123; font-family: Zitiming; src: url('/fonts/Zitiming.ttf');&#125;.site-title &#123; font-size: 40px !important; font-family: 'Zitiming' !important;&#125; 其中字体文件在 themes/next/source/fonts 目录下，里面有个 .gitkeep 的隐藏文件，打开写入你要保留的字体文件，比如我的是就是写入 Zitiming.ttf ，具体字库自己从网上下载即可。 37. 添加背景图在 themes/next/source/css/_custom/custom.styl 中添加如下代码：1234567body&#123; background:url(/images/bg.jpg); background-size:cover; background-repeat:no-repeat; background-attachment:fixed; background-position:center;&#125; 38. 各版块透明度修改38.1 内容板块透明博客根目录 themes\next\source\css\_schemes\Pisces\_layout.styl 文件 .content-wrap 标签下 background: white修改为：1background: rgba(255,255,255,0.7); //0.7是透明度 38.2 菜单栏背景博客根目录 themes\next\source\css\_schemes\Pisces\_layout.styl 文件 .header-inner 标签下 background: white修改为：1background: rgba(255,255,255,0.7); //0.7是透明度 38.3 站点概况背景博客根目录 themes\next\source\css\_schemes\Pisces\_sidebar.styl 文件 .sidebar-inner 标签下 background: white修改为：1background: rgba(255,255,255,0.7); //0.7是透明度 然后修改博客根目录 themes\next\source\css\_schemes\Pisces\_layout.styl 文件 .sidebar 标签下 background: $body-bg-color修改为：1background: rgba(255,255,255,0.7); //0.7是透明度 38.4 按钮背景博客根目录 themes\next\source\css\_common\components\post\post-button.styl 同上修改对应位置为 background: transparent; 39. 添加网易云音乐在网易云音乐（网页版）中搜索我们想要插入的音乐，然后点击生成外链播放器然后根据你得设置生成相应的html代码，将获得的html代码插入到你想要插入的位置。 我放在了侧边栏，在 themes/next/layout/_custom/sidebar.swig 文件中增加生成的HTML代码：1234&lt;div id="music163player"&gt; &lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=280 height=86 src="//music.163.com/outchain/player?type=2&amp;id=38358214&amp;auto=0&amp;height=66"&gt; &lt;/iframe&gt;&lt;/div&gt; 可以根据自己实际情况修改宽高等样式。 参考自： http://www.jianshu.com/p/3ff20be857http://blog.csdn.net/qq_33699981/article/details/72716951http://blog.csdn.net/heqiangflytosky/article/details/54863185]]></content>
      <categories>
        <category>技术</category>
        <category>个人博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next主题</tag>
        <tag>Hexo+Next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2017观看影视]]></title>
    <url>%2F2017%2F09%2F25%2F2017%E8%A7%82%E7%9C%8B%E5%BD%B1%E8%A7%86%2F</url>
    <content type="text"><![CDATA[电影 2017.02 《太空旅客》 《但丁密码》 《神奇动物在哪里》 2017.03 《自杀小队》 《星际迷航超越星辰》2017.04 《逆转时空》 2017.05 《降临》 《金刚狼3》 《魔弦传说》 《你的名字》 《生化危机六终章》 2017.07 《血战钢锯岭》 《神奇女侠》 《攻壳机动队》我们执着于记忆，觉得它定义了我们，但是定义我们的是我们的行为。 《守护者：世纪战元》全剧尴尬 《海底总动员2： 多莉去哪儿》不要计划相遇，最美好的事情总是偶然发生的。只要你用心，你可以做任何事。 《海洋奇缘》 《金刚：骷髅岛》 《神偷奶爸3》 《宝贝老板》 《异星觉醒》强大演员阵容的科幻烂片 《银河护卫队2》 2017.08 《星际特工：千星之城》在IMAX看的，特技可以，剧情和人物角色稍显乏力，节奏不是很紧凑，特别是结局高潮部分。 2017.10 《圆梦巨人》 《变形金刚5》 《大护法》 《蜘蛛侠：英雄归来》 电视剧 2017.01 《神探夏洛克》第四季 2017.04 《西部世界》 2017.06 《黑镜》一二三季包括圣诞特别篇 2017.07 《9号秘事》一二三季 2017.10 《硅谷》一二三季 《使女的故事》]]></content>
      <categories>
        <category>影音</category>
        <category>影视</category>
      </categories>
      <tags>
        <tag>影音</tag>
        <tag>电影</tag>
        <tag>电视剧</tag>
        <tag>动画</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[书山]]></title>
    <url>%2F2017%2F09%2F08%2F%E4%B9%A6%E5%B1%B1%2F</url>
    <content type="text"><![CDATA[为乐趣而读书。 ———— 毛姆 欢迎推荐好书，交流好文。]]></content>
      <categories>
        <category>阅读</category>
      </categories>
      <tags>
        <tag>阅读</tag>
        <tag>书名</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android Studio个人设置]]></title>
    <url>%2F2017%2F09%2F06%2FAndroid-Studio%E4%B8%AA%E4%BA%BA%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[Android Studio 的个人设置只是在初次安装的时候会根据个人喜好配置，每当换电脑或者重搭开发环境时都要重新设置，因为设置项很多，所以配置起来很麻烦，而且网上找的资料不一定全，好在 Android Studio 为我们提供了非常方便的导入导出设置功能。不过有时候导入导出还是会有异常，比如这次我将 AS 2.3 的配置导入到 AS 3.0的时候就出现了很多毛病，所以写这篇日志方便自己以后手动配置。 修改缓存文件位置修改 Android Studio 根目录下 bin\idea.properties（找到要修改的选项，去掉前面的#，也就是注释符号，然后修改后面的配置路径）。1234567idea.config.path=D:\.AndroidStudio\configidea.system.path=D:\.AndroidStudio\systemidea.plugins.path=D:\AndroidStudio\pluginsidea.log.path=D:\.AndroidStudio\system\log 在gradle的安装目录，编辑 bin\gradle 文件，然后找到如下语句:1# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script 在这句话的下面加上如下这一句:1GRADLE_OPTS=-Dgradle.user.home=/yourpath/gradle/gradle_cache 常用设置导入导出配置包我通常都是将我的配置包以时间命名放在云盘上。 配置黑色主题和菜单栏的字体和大小 导入第三方主题和导入配置的方式一样，该主题网站提供了各种各样IDE的主题样式。 上面网站下的主题我发现有时候注解的字体颜色很难辨认，所以我用的自带主题。 配置代码编辑区域字体和大小 配置控制窗口区域字体和大小和上面配置代码编辑区一样，只是选择 Console Font 选项。 设置关闭自动更新取消勾是关闭自动更新，但是本人喜欢去尝试新版本踩坑，所以没关闭自动更新。 设置关闭大小写敏感配置设置为None是关闭大小写敏感，即代码提示时不区分大小写。 设置自动导包两个勾都要打上。 设置代码行数显示我现在用的新版本貌似默认勾选了的。 设置文件默认编码方式UTF-8 设置新建文件头根据自己情况修改红框内容，不需要就直接删掉内容。 设置AS打开引导设置AS打开后自己选择工程进入，禁止自动打开上次工程 禁止代码折叠默认这三个选项是勾选上的，如果要禁止代码折叠，则需要取消这三处勾选。 取消快速运行Instant Run默认是勾选的，取消掉。 驼峰选择Android 开发中，我们通常会使用驼峰命名法对变量进行命名，但是当我们通过 Ctrl + Left / Right 键改变字符选择区域的时候 Android Studio 默认不支持‘驼峰’单词的选择。 命名前缀我们通常会遵循 Android 官方关于编码风格的指导来进行字段命名。在 Android 源码中我们可以看到通常成员变量都是以‘m’开始。其实Android Studio 可以自动在帮我们生成字段名称的时候加上自定义的前缀，如: 非共有，非静态的成员变量以’m’开始 静态成员变量以’s’开始 配置Log颜色Android Studio自带主题Log显示颜色比较单一，可以自己配色。如果是第三方主题，先取消勾选 Use inherited attributes，然后就可以为各种级别设置颜色。推荐颜色设置：123456Assert: #AA66CCDebug: #33B5E5Error: #FF4444Info: #99CC00Verbose: #FFFFFFWarning: #FFBB33 设置SDK和JDK路径一次选择选择菜单 File | Other Settings | Default Project Structures… 工程模板Android Studio 创建 Module 时并没有将 Android 开发中常用的文件目录全部生成，比如默认只生成了一个 drawable 文件夹，常用的 drawable-hdpi 等文件夹需要我们自己创建。 配置方法1 进入 Android Studio 安装目录 依次进入 plugins | android | lib | templates | gradle-projects | NewAndroidModule | root | res 在res文件夹下创建 drawable-hdpi 等文件夹(可选：从对应的 mipmap 文件夹中拷贝 iclauncher.png 到创建的 drawable文件夹中) 回到 NewAndroidModule 目录，用编辑器打 recipe.xml.ftl文件 加入以下配置 配置方法2 进入 Android Studio 安装目录 依次进入 plugins | android | lib | templates | gradle-projects | NewAndroidModule 用编辑器打开 recipe.xml.ftl文件，并加入以下配置 这两种方法的区别是，第一种方式可以在文件夹中加入相应的图片，但是配置稍显繁琐，第二种方式配置简单，但是只能创建目录，不能包含默认图片。 当然，通过类似的方式我们还可以在创建 Module 的时候做很多事情，比如： 在 colors.xml 文件中生成常用颜色 在 build.gradle 文件中生成自定义配置 在 .gitignore 文件中生成自定义忽略配置 等等… 活动模板Android Studio 中默认提供了很多非常方便的活动模板(Live Templates)，例如，我们输入 sout 后按 enter 键， Android Studio 会自动帮我们写入 System.out.println(); 其实 sout 就是 AS 自带的一个活动模板。由此可以看出，活动模板就是我们常用代码的一个缩写。开发中有很多代码都会重复出现，因此自定义合适的活动模板能很大程度上避免我们很多重复的体力劳动。所以我们熟悉这些自带的活动模板还是能提高搬砖效率的，至于如何自定义依葫芦画瓢就行了，实在不行网上教程也挺多的。 安装常用插件ButterKnife Zelezny专注于Android系统的View注入框架,可以减少大量的findViewById以及setOnClickListener代码，可视化一键生成 要配合 com.jakewharton:butterknife:8.8.1 依赖库使用，把该库添加到 build.gradle 脚本里即可。 GsonFormat根据JSONObject格式的字符串,自动生成实体类参数。 使用方法：快捷键Alt+S也可以使用Alt+Insert选择GsonFormat android-selector可以根据指定颜色生成 Selector Drawable 的插件 Android Code Generator根据布局文件快速生成对应的Activity，Fragment，Adapter，Menu。 Android Parcelable code generatorJavaBean序列化，快速实现Parcelable接口。 Android Drawable Importer图标快捷批量导入 Android Methods Count显示依赖库中得方法数（AS 3.0 不可用） Android WiFi ADB使用 WiFi 连接而不需要 USB 连接 Android 设备达到安装, 运行, 调试应用的目的 ADB idea支持直接在AS面板中进行ADB操作,快捷键: Mac OSX: Ctrl+Shift+A Windows/Linux: Ctrl+Alt+Shift+A Lifecycle Sorter可以根据Activity或者fragment的生命周期对其生命周期方法位置进行先后排序，快捷键Ctrl + alt + K]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Android studio</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android资料汇总]]></title>
    <url>%2F2017%2F08%2F22%2FAndroid%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[插件 android-selector可以根据指定颜色生成 Selector Drawable 的插件 GradleDependenciesHelperPluginGradle 依赖自动补全插件 GsonFormat根据JSONObject格式的字符串,自动生成实体类参数 Android Drawable Importer图标快捷批量导入 AndroidWiFiADB使用 WiFi 连接而不需要 USB 连接 Android 设备达到安装, 运行, 调试应用的目的 adb-idea支持直接在AS面板中进行ADB操作,快捷键: Mac OSX: Ctrl+Shift+A Windows/Linux: Ctrl+Alt+Shift+A Android Methods Count统计 Android 依赖库中方法的总个数, 避免应用方法数超过 65K 问题 ButterKnife ZeleznyButterKnife是一个专注于Android系统的View注入框架,可以减少大量的findViewById以及setOnClickListener代码，可视化一键生成 Android Parcelable code generatorAndroid中的序列化有两种方式, 分别是实现 Serializable 接口和 Parcelable 接口, 但在 Android 中是推荐使用 Parcelable, 只不过我们这种方式要比Serializable方式要繁琐, 那么有了这个插件一切就ok了 40个常用插件 工具 jadx一个 Android 反编译神器, 不同于常见的 dex2jar, 这个反编译器生成代码的 try/catch 次数更少, View也不再是数字 id 了, 可读性更高 Smali Viewersv 是一款免费 APK 分析软件, 对你感兴趣的 APP 分析看看它们都用了些什么, 对你学习借鉴有一定帮助 StethoStetho 是 Facebook 出品的一个强大的 Android 调试工具,使用该工具你可以在 Chrome Developer Tools 查看 App 的布局, 网络请求(仅限使用 Volley, okhttp 的网络请求库), sqlite, preference, 一切都是可视化的操作,无须自己在去使用 adb, 也不需要 root 你的设备 checkstyle-ideaCheckstyle-idea 是一款检查自己写的代码是否符合规范的插件, 该插件是根据 checkstyle.xml 文件来检查的, checkstyle.xml 文件可以由自己自己定义, 也可以使用一些大公司定义的规范, 如果不懂得如何定义, 可以查看 官方文档, 该插件的详细介绍以及使用, 可以看一下咕咚大侠写的 文章 LeakCanary良心企业 Square 最近刚开源的一个非常有用的工具, 强烈推荐, 帮助你在开发阶段方便的检测出内存泄露的问题, 使用起来更简单方便, 而且我们团队第一时间使用帮助我们发现了不少问题, 英文不好的这里有雷锋同志翻译的中文版 LeakCanary 中文使用说明 库资源汇总库 awesome-android-libraries各种android库，包括网络，图片加载，日志，相机，多媒体等等 viewsAndroid酷炫自定义控件(View)汇总 android-open-project各种开源库 awesome-android-uiandroid UI/UX 汇总库 Android_Dataandroid各种资源汇总 Android-Dev-FavoritesAndroid开发者的收藏夹 资源细分库 okhttp-OkGoOkHttpUtils-2.0.0升级后改名OkGo，全新完美支持RxJava，比Retrofit更简单易用。该库是封装了okhttp的标准RESTful风格的网络框架，支持大文件上传下载，上传进度回调，下载进度回调，表单上传（多文件和多参数一起上传），链式调用，可以自定义返回对象，支持Https和自签名证书，支持超时自动重连，支持cookie的持久化和自动管理，支持五种缓存模式缓存网络数据，支持301和302重定向，扩展了统一的上传管理和下载管理功能 Curzibn/LubanLuban，也称鲁班。该库作者一针见血的提出当前图片压缩处理的一些问题：单纯对图片进行裁切，压缩已经有很多文章介绍。但是裁切成多少，压缩成多少却很难控制好，裁切过头图片太小，质量压缩过头则显示效果太差。所以，他通过微信朋友圈发送近100张不同分辨率图片，对比原图与微信压缩后的图片逆向推算出来的压缩算法，具体的算法实现在项目中有详细说明介绍。使用上，支持普通调用方式外，也支持RxJava！ Compressor它可以满足动则几MB的图片高保真的压缩到几十KB的效果。 android-viewbadger消息数目小红点 PagerBottomTabStripPagerBottomTabStrip 是一个基本按谷歌Material Design规范完成的安卓底部导航栏控件 PhotoEdit图片编辑处理（添加文字，涂鸦，马赛克等等） sweet-alert-dialog优美的对话框样式 BannerLayout简洁实用的自动轮播广告栏 RecyclerViewCardGalleryRecyclerView实现Card Gallery效果，替代ViewPager方案 FantasySlide一个 DrawerLayout的扩展,具有帅气的动画与创新的交互。一次手势完成滑出侧边栏与选择菜单 CommentListTextView一个TextView实现朋友圈多条评论效果 朋友圈 微博 评论 comment ImagePicker选择头像，选择多张图，支持超大图片 CircleImageView圆形头像库 NineGridView类似QQ空间，微信朋友圈，微博主页等，展示图片的九宫格控件，自动根据图片的数量确定图片大小和控件大小，使用Adapter模式设置图片，对外提供接口回调，支持任意的图片加载框架,如 Glide,ImageLoader,Fresco,xUtils3,Picasso 等，支持点击图片全屏预览大图。 ImagePicker完全仿微信的图片选择，并且提供了多种图片加载接口，选择图片后可以旋转，可以裁剪成矩形或圆形，可以配置各种其他的参数 material-icon-libMaterial风格矢量图标库 Android-skin-supportAndroid换肤框架 AndroidUtilsAndroid常用工具类 BaseRecyclerViewAdapterHelper一个强大并且灵活的RecyclerViewAdapter logger简单，漂亮和强大Log日志 模拟器相关 国内安卓模拟器连接端口 逍遥模拟器127.0.0.1:21503 夜神模拟器127.0.0.1:62001 学习资源 http://www.jianshu.com/p/5d26ae5e03f9 https://github.com/suzeyu1992/repo https://github.com/android-cn/android-dev-cn 国内开发者信息]]></content>
      <categories>
        <category>工具资源</category>
        <category>资源</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>资料</tag>
      </tags>
  </entry>
</search>
